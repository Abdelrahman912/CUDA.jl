branches:
  only:
    - master
    - /release-.*/

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

environment:
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x86/0.6/julia-0.6-latest-win32.exe"
      CUDA_VERSION: 8.0
      CUDA_BUILD: 8.0.44
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x64/0.6/julia-0.6-latest-win64.exe"
      CUDA_VERSION: 8.0
      CUDA_BUILD: 8.0.44
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
      CUDA_VERSION: 8.0
      CUDA_BUILD: 8.0.44
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
      CUDA_VERSION: 8.0
      CUDA_BUILD: 8.0.44

install:
  # Julia
  - appveyor DownloadFile %JULIA_URL% -FileName julia-installer.exe
  - julia-installer.exe /S /D=C:\projects\julia
  # CUDA
  - appveyor DownloadFile https://developer.nvidia.com/compute/cuda/%CUDA_VERSION%/prod/local_installers/cuda_%CUDA_BUILD%_windows-exe -FileName cuda_%CUDA_BUILD%_windows.exe
  - cuda_%CUDA_BUILD%_windows.exe -s compiler_%CUDA_VERSION% cublas_%CUDA_VERSION% cublas_dev_%CUDA_VERSION% cudart_%CUDA_VERSION% curand_%CUDA_VERSION% curand_dev_%CUDA_VERSION% nvrtc_%CUDA_VERSION% nvrtc_dev_%CUDA_VERSION%

build_script:
  # convert from shallow to complete for Pkg.clone to work
  - IF EXIST .git\shallow (git fetch --unshallow)
  - C:\projects\julia\bin\julia -e "versioninfo();
      Pkg.clone(pwd(), \"CUDAapi\"); Pkg.build(\"CUDAapi\")"

test_script:
  - C:\projects\julia\bin\julia -e "Pkg.test(\"CUDAapi\")"
