before_script:
  - julia -e 'using InteractiveUtils;
              versioninfo()'

variables:
  JULIA_DEPOT_PATH: "$CI_PROJECT_DIR/.julia/"

stages:
  - test
  - postprocess


## testing

.test_template: &test_template
  script:
    - mkdir $JULIA_DEPOT_PATH # Pkg3.jl#325
    - julia --project -e "using Pkg;
                          Pkg.instantiate();
                          Pkg.build();
                          Pkg.test(; coverage=true);"
  artifacts:
    paths:
      - Manifest.toml
      - .julia/
      - deps/ext.jl
      - src/*.cov
      # gitlab-runner#2620
      - src/*/*.cov
      - src/*/*/*.cov

test:v0.7:
  stage: test
  image: juliagpu/julia:v0.7-cuda
  <<: *test_template

test:v1.0:
  stage: test
  image: juliagpu/julia:v1.0-cuda
  <<: *test_template

test:dev:
  stage: test
  image: juliagpu/julia:dev-cuda
  <<: *test_template
  allow_failure: true


## post-processing

coverage:
  stage: postprocess
  image: juliagpu/julia:v0.7-cuda
  dependencies:
    - test:v0.7
  script:
    - julia --project -e 'using Pkg;
                          Pkg.add("Coverage")'
    - julia --project -e 'using Coverage;
                          cl, tl = get_summary(process_folder());
                          println("(", cl/tl*100, "%) covered");
                          Codecov.submit_local(process_folder(), ".")'
  coverage: '/\(\d+.\d+\%\) covered/'

# Documenter.jl's `deploydocs` really is only made to work with Travis,
# so we need to fake quite a bit of environment in order for it to work.
# TODO: create an unconditional `deploydocs`, and pick when to deploy in here.
documentation:
  stage: postprocess
  image: juliagpu/julia:v0.7-cuda
  variables:
    DOCUMENTER_DEBUG: "true"
    TRAVIS_REPO_SLUG: "github.com/JuliaGPU/CUDAnative.jl.git"
    TRAVIS_BRANCH: $CI_COMMIT_REF_NAME
    TRAVIS_TAG: $CI_COMMIT_TAG
  dependencies:
    - test:v0.7
  script:
    # gitlab-ce#15280
    - apt update && apt install -y jq
    - export PR_ID=$(curl -s "http://gitlab.ca/api/v4/projects/${CI_PROJECT_ID}/merge_requests?private_token=${OAUTH_TOKEN}&state=opened" | jq -r ".[]|select(.sha == \"$CI_COMMIT_SHA\")|.iid")
    - export TRAVIS_PULL_REQUEST=$(if [ "$PR_ID" == "" ]; then echo "false"; else echo "true"; fi)

    - apt install -y openssh-client && mkdir /root/.ssh
    - julia --project -e 'using Pkg;
                          Pkg.add("Documenter")'
    - julia --project docs/make.jl
